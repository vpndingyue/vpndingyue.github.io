<!doctype html>
<html lang="en">

<head>
        <link rel="canonical" href="https://vpndingyue.github.io/news/article-101489.htm" />
    <!-- Required Meta Tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- Document Title, Description, and Author -->
    <title>FreeRTOS实时操作系统之可视化追踪调试_操作系统</title>
        <meta name="description" content="目录  前言 1.使能可视化追踪和运行时间统计功能 2.获取任务信息并格式化 3.添加到命令解释列表    前言 用RTOS编程，为每个任务分配多大的堆栈空间就成了一项技术活：分配多了浪费系统资源，分" />
        <link rel="icon" href="/assets/website/img/windowsclashnode/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="VPN订阅 推荐VPN免费节点订阅官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://vpndingyue.github.io/news/article-101489.htm" />
    <meta property="og:site_name" content="VPN订阅 推荐VPN免费节点订阅官网" />
    <meta property="og:title" content="FreeRTOS实时操作系统之可视化追踪调试_操作系统" />
    <meta property="og:image" content="https://vpndingyue.github.io/uploads/20240618/174f65e7a46144db9930fea0079b3df6.webp" />
        <meta property="og:release_date" content="2025-04-22T08:23:46" />
    <meta property="og:updated_time" content="2025-04-22T08:23:46" />
        <meta property="og:description" content="目录  前言 1.使能可视化追踪和运行时间统计功能 2.获取任务信息并格式化 3.添加到命令解释列表    前言 用RTOS编程，为每个任务分配多大的堆栈空间就成了一项技术活：分配多了浪费系统资源，分" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="FreeRTOS实时操作系统之可视化追踪调试_操作系统">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    
    <!-- Google Fonts Files -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Playfair+Display:ital,wght@0,400;0,500;0,600;0,700;0,800;0,900;1,400;1,500;1,600;1,700;1,800;1,900&family=Roboto+Condensed:ital,wght@0,300;0,400;0,700;1,300;1,400;1,700&display=swap" rel="stylesheet">
    <!-- CSS Files -->
    <link rel="stylesheet" href="/assets/website/css/windowsclashnode/hello-bsb.css">
    <link rel="stylesheet" href="/assets/website/css/G.css" />
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-JVF6X0RN8N"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-JVF6X0RN8N');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-bs-spy="scroll" data-bs-target="#bsb-tpl-navbar" data-bs-smooth-scroll="true" tabindex="0" data-page="detail">
        <!-- Header -->
    <header id="header" class="sticky-top bsb-tpl-header-sticky bsb-tpl-header-sticky-animationX">
        <!-- Navbar 1 - Bootstrap Brain Component -->
        <nav id="scrollspyNav" class="navbar navbar-expand-lg bsb-tpl-bg-alabaster bsb-navbar bsb-navbar-hover bsb-navbar-caret bsb-tpl-navbar-sticky" data-bsb-sticky-target="#header">
            <div class="container">
                <a class="navbar-brand" href="/">
                                <span>VPN订阅</span>
                                </a>
                <button class="navbar-toggler border-0" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasNavbar" aria-controls="offcanvasNavbar">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-list" viewBox="0 0 16 16">
                        <path fill-rule="evenodd" d="M2.5 12a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5z" />
                    </svg>
                </button>
                <div class="offcanvas offcanvas-end" tabindex="-1" id="offcanvasNavbar" aria-labelledby="offcanvasNavbarLabel">
                    <div class="offcanvas-header">
                        <h5 class="offcanvas-title" id="offcanvasNavbarLabel">Menu</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
                    </div>
                    <div class="offcanvas-body">
                        <ul id="bsb-tpl-navbar" class="navbar-nav justify-content-end flex-grow-1">
                                                        <li class="nav-item">
                                <a class="nav-link" href="/">首页</a>
                            </li>
                                                        <li class="nav-item">
                                <a class="nav-link" href="/free-nodes/">免费节点</a>
                            </li>
                                                        <li class="nav-item">
                                <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                            </li>
                                                        <li class="nav-item">
                                <a class="nav-link" href="/news/">新闻资讯</a>
                            </li>
                                                        <li class="nav-item">
                                <a class="nav-link" href="/client.htm">客户端</a>
                            </li>
                                                    </ul>
                    </div>
                </div>
            </div>
        </nav>
    </header>
    <!-- Hero 3 - Bootstrap Brain Component -->
    <section id="scrollspyHero" class="bsb-tpl-bg-alabaster pt-3 pt-xl-2 list">
        <div class="container overflow-hidden">
            <div class="row gy-5 gy-lg-0">
                <div class="col-12 col-lg-6 slogan">
                    <h1 class="display-3 fw-bold mb-3">FreeRTOS实时操作系统之可视化追踪调试_操作系统 </h1>
                    <p class="fs-4 mb-5">
                        <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / <span>正文</span>
                    </p>
                </div>
                <div class="col-12 col-lg-5 text-center">
                    <div class="position-relative">
                        <div class="bsb-circle border border-4 border-accent position-absolute top-50 start-10 translate-middle z-1"></div>
                        <div class="bsb-circle bg-primary position-absolute top-50 start-50 translate-middle" style="--bsb-cs: 460px;"></div>
                        <div class="bsb-circle border border-4 border-accent position-absolute top-10 end-0 z-1" style="--bsb-cs: 100px;"></div>
                        <img class="img-fluid position-relative z-2" loading="lazy" href="/assets/website/img/windowsclashnode/hero/hero-img-1.webp" alt="">
                    </div>
                </div>
            </div>
        </div>
    </section>
    <!-- Main -->
    <main id="main">
        <!-- Process 1 - Bootstrap Brain Component -->
        <section id="scrollspyAbout" class="py-5 py-xl-8 py-xxl-16">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="Clash Node官网订阅站" data-url="https://clashnode.github.io">
                <div class="xcblog-blog-detail">
                      				  				  				<div id="navCategory"> <h5 class="catalogue">目录</h5> <ul class="first_class_ul"> <li><a href="#_label0" rel="nofollow">前言</a></li> <li><a href="#_label1" rel="nofollow">1.使能可视化追踪和运行时间统计功能</a></li> <li><a href="#_label2" rel="nofollow">2.获取任务信息并格式化</a></li> <li><a href="#_label3" rel="nofollow">3.添加到命令解释列表</a></li> </ul> </div> <p class="maodian"><a name="_label0" rel="nofollow"></a></p> <h2>前言</h2> <p>用RTOS编程，为每个任务分配多大的堆栈空间就成了一项技术活：分配多了浪费系统资源，分配少了又恐怕会发生堆栈溢出。由于中断和抢占式调度器的存在，我们要估算出一个任务需要多少堆栈是非常困难的，今天我们就介绍一种方法，来获取每个任务的剩余堆栈空间。本文以NXP LPC177x_8x系列微控制器为例。</p> <p>我们将这个功能做成一个命令，添加到<a href="//www.jb51.net/article/243694.htm" target="_blank" rel="nofollow">FreeRTOS使用任务通知实现命令行解释器</a>一文介绍的命令解释列表中。当程序运行一段时间后，我们在SecureCRT软件中输入命令“task”后回车，能看到如图1-1所示的任务信息。这里只有两个任务，其中堆栈一列中的数字，代表对应任务剩余的堆栈空间，单位是StackType_t类型，这个类型在移植层定义，一般定义为4字节。</p> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220424/6e06c0f0a7fd07396eeb3c2d88cb6830.jpg"></p> <p>图1-1：任务信息</p> <p class="maodian"><a name="_label1" rel="nofollow"></a></p> <h2>1.使能可视化追踪和运行时间统计功能</h2> <p>如图1-1所示，要实现堆栈使用量信息以及CPU使用率信息，必须将FreeRTOSConfig.h文件中的两个宏设置为1：</p> <div class="ay1code"> <pre class="brush:cpp;">         #define configUSE_TRACE_FACILITY          1                 #define configGENERATE_RUN_TIME_STATS 1</pre> </div> <p>第一个宏用来使能可视化追踪功能，第二个宏用来使能运行时间统计功能。如果第二个宏设置为1，则下面两个宏必须被定义：</p> <blockquote> <p>portCONFIGURE_TIMER_FOR_RUN_TIME_STATS()：</p> </blockquote> <p>用户程序需要提供一个基准时钟函数，函数完成初始化基准时钟功能，这个函数要被define到宏portCONFIGURE_TIMER_FOR_RUN_TIME_STATS()上。</p> <p>这是因为运行时间统计需要一个比系统节拍中断频率还要高分辨率的基准定时器，否则，统计可能不精确。</p> <p>基准定时器中断频率要比统节拍中断快10~100倍。基准定时器中断频率越快，统计越精准，但能统计的运行时间也越短（比如，基准定时器10ms中断一次，8位无符号整形变量可以计到2.55秒，但如果是1秒中断一次，8位无符号整形变量可以统计到255秒）。</p> <blockquote> <p>portGET_RUN_TIME_COUNTER_VALUE()：</p> </blockquote> <p>用户程序需要提供一个返回基准时钟当前“时间”的函数，这个函数要被define到宏portGET_RUN_TIME_COUNTER_VALUE()上。</p> <p>我们使用定时器1来产生基准时钟，定时器1初始化函数为：</p> <div class="ay1code"> <pre class="brush:cpp;">/**  * 初始化计时定时器1,用于OS任务运行时间统计  */  void init_timer1_for_runtime_state(void)  {      TIM_TIMERCFG_Type Timer0CfgType;      Timer0CfgType.PrescaleOption=TIM_PRESCALE_USVAL;        //预分频的单位是微秒      Timer0CfgType.PrescaleValue=500;                        //预分频后为500微秒,      TIM_Init(LPC_TIM1,TIM_TIMER_MODE,&amp;Timer0CfgType);      LPC_TIM1-&gt;TCR=0x01;  }</pre> </div> <p>定时器1被配置成每隔500微秒，TC寄存器值增一。我们将定时器1的 TC寄存器值作为基准时钟当前时间。当TC寄存器值溢出时，大概要经过24.8天，这对于我们这个应用是足够的。</p> <p>在FreeRTOSConfig.h中，定义初始化基准定时器宏和获取当前时间宏：</p> <div class="ay1code"> <pre class="brush:cpp;">extern void init_timer1_for_runtime_state(void);  #define TIMER1_TC         ( * ( ( volatile uint32_t * )0x40008008 ) )  #define portCONFIGURE_TIMER_FOR_RUN_TIME_STATS() init_timer1_for_runtime_state()  #define portGET_RUN_TIME_COUNTER_VALUE() TIMER1_TC</pre> </div> <p class="maodian"><a name="_label2" rel="nofollow"></a></p> <h2>2.获取任务信息并格式化</h2> <p>获取每个任务的状态信息使用的是API函数uxTaskGetSystemState()，该函数定义为：</p> <div class="ay1code"> <pre class="brush:cpp;">UBaseType_tuxTaskGetSystemState(                         TaskStatus_t * constpxTaskStatusArray,                         const UBaseType_tuxArraySize,                         unsigned long * constpulTotalRunTime );</pre> </div> <p>函数uxTaskGetSystemState()向TaskStatus_t结构体填充相关信息，系统中每一个任务的信息都可以填充到TaskStatus_t结构体数组中，数组大小由uxArraySize指定。结构体TaskStatus_t定义如下：</p> <div class="ay1code"> <pre class="brush:cpp;">typedef struct xTASK_STATUS  {     /* 任务句柄*/     TaskHandle_t xHandle;     /* 指针，指向任务名*/     const signed char *pcTaskName;     /*任务ID，是一个独一无二的数字*/     UBaseType_t xTaskNumber;     /*填充结构体时，任务当前的状态（运行、就绪、挂起等等）*/     eTaskState eCurrentState;     /*填充结构体时，任务运行（或继承）的优先级。*/     UBaseType_t uxCurrentPriority;     /* 当任务因继承而改变优先级时，该变量保存任务最初的优先级。仅当configUSE_MUTEXES定义为1有效。*/     UBaseType_t uxBasePriority;     /* 分配给任务的总运行时间。仅当宏configGENERATE_RUN_TIME_STATS为1时有效。*/     unsigned long ulRunTimeCounter;     /* 从任务创建起，堆栈剩余的最小数量，这个值越接近0，堆栈溢出的可能越大。 */     unsigned short usStackHighWaterMark;  }TaskStatus_t;</pre> </div> <p>注意，这个函数仅用来调试用，调用此函数会挂起所有任务，直到函数结束后才恢复挂起的任务，因此任务可能被挂起很长时间。在文件FreeRTOSConfig.h中，宏configUSE_TRACE_FACILITY必须设置为1，此函数才有效。</p> <p>由于我们不使用动态内存分配策略，所以实现定义了最大任务个数并预先分配好了存储任务状态信息的数组：</p> <div class="ay1code"> <pre class="brush:cpp;">#defineMAX_TASK_NUM        5  TaskStatus_tpxTaskStatusArray[MAX_TASK_NUM];</pre> </div> <p>正确调用函数uxTaskGetSystemState()后，任务的信息会被放在TaskStatus_t结构体中，我们需要将这些信息格式化为容易阅读的形式，并共通过串口打印到屏幕。完成这些功能的函数叫做get_task_state()，代码如下所示：</p> <div class="ay1code"> <pre class="brush:cpp;">/*获取OS任务信息*/  voidget_task_state(int32_t argc,void *cmd_arg)  {      const chartask_state[]={'r','R','B','S','D'};      volatile UBaseType_t uxArraySize, x;      uint32_t ulTotalRunTime,ulStatsAsPercentage;      /* 获取任务总数目 */      uxArraySize = uxTaskGetNumberOfTasks();     if(uxArraySize&gt;MAX_TASK_NUM)      {          MY_DEBUGF(CMD_LINE_DEBUG,("当前任务数量过多！\n"));      }      /*获取每个任务的状态信息 */      uxArraySize = uxTaskGetSystemState(pxTaskStatusArray, uxArraySize, &amp;ulTotalRunTime );      #if (configGENERATE_RUN_TIME_STATS==1)      MY_DEBUGF(CMD_LINE_DEBUG,("任务名      状态  ID    优先级  堆栈    CPU使用率\n"));         /* 避免除零错误 */      if( ulTotalRunTime &gt; 0 )      {          /* 将获得的每一个任务状态信息部分的转化为程序员容易识别的字符串格式 */          for( x = 0; x &lt; uxArraySize; x++ )          {              char tmp[128];              /* 计算任务运行时间与总运行时间的百分比。*/              ulStatsAsPercentage =(uint64_t)(pxTaskStatusArray[ x ].ulRunTimeCounter)*100 / ulTotalRunTime;              if( ulStatsAsPercentage &gt; 0UL )              {                 sprintf(tmp,"%-12s%-6c%-6d%-8d%-8d%d%%",pxTaskStatusArray[ x].pcTaskName,task_state[pxTaskStatusArray[ x ].eCurrentState],                                                                         pxTaskStatusArray[ x ].xTaskNumber,pxTaskStatusArray[ x].uxCurrentPriority,                                                                         pxTaskStatusArray[ x ].usStackHighWaterMark,ulStatsAsPercentage);              }              else              {                  /* 任务运行时间不足总运行时间的1%*/                  sprintf(tmp,"%-12s%-6c%-6d%-8d%-8dt&lt;1%%",pxTaskStatusArray[x ].pcTaskName,task_state[pxTaskStatusArray[ x ].eCurrentState],                                                                         pxTaskStatusArray[ x ].xTaskNumber,pxTaskStatusArray[ x].uxCurrentPriority,                                                                         pxTaskStatusArray[ x ].usStackHighWaterMark);                             }             MY_DEBUGF(CMD_LINE_DEBUG,("%s\n",tmp));          }      }      MY_DEBUGF(CMD_LINE_DEBUG,("任务状态:   r-运行  R-就绪  B-阻塞  S-挂起  D-删除\n"));      #endif //#if (configGENERATE_RUN_TIME_STATS==1)  }</pre> </div> <p class="maodian"><a name="_label3" rel="nofollow"></a></p> <h2>3.添加到命令解释列表</h2> <p>在<a href="//www.jb51.net/article/243694.htm" target="_blank" rel="nofollow">FreeRTOS使用任务通知实现命令行解释器</a>一文我们讲过了命令表，这里只需要将get_task_state()函数添加到命令列表中，命令设置为”task”，代码如下所示：</p> <div class="ay1code"> <pre class="brush:cpp;">/*命令表*/  const cmd_list_structcmd_list[]={  /*   命令    参数数目    处理函数        帮助信息                                  */         {"?",       0,     handle_help,     "?                                  -打印帮助信息"},                       {"reset",   0,     handle_reset,    "reset                              -重启控制器"},      {"arg",     8,     handle_arg,      "arg&lt;arg1&gt; &lt;arg2&gt; ...               -测试用,打印输入的参数"},      {"hello",   0,     printf_hello,    "hello                              -打印HelloWorld!"},      {"task",    0,     get_task_state,  "task                               -获取任务信息"},  };</pre> </div> 			                </div>
                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-100809.htm">动物疫苗的保管注意事项不包括（动物疫苗需要冷藏吗）</a></p>
                                        <p>下一个：<a href="/news/article-101490.htm">同城哪里可以领养猫狗（同城哪里可以领养猫狗的）</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-74603.htm" title="动物防疫站营业时间是多少号（动物防疫站几点关门）">动物防疫站营业时间是多少号（动物防疫站几点关门）</a></li>
                        <li class="py-2"><a href="/news/article-80389.htm" title="被猫爪子勾了一下出了一点血要打血清吗（被猫爪子勾了一下出了一点血要打血清吗?）">被猫爪子勾了一下出了一点血要打血清吗（被猫爪子勾了一下出了一点血要打血清吗?）</a></li>
                        <li class="py-2"><a href="/news/article-90432.htm" title="宠物粮生产设备厂家 宠物粮生产设备厂家排名">宠物粮生产设备厂家 宠物粮生产设备厂家排名</a></li>
                        <li class="py-2"><a href="/news/article-81781.htm" title="动物疫苗的概念和分类是什么 动物疫苗的概念和分类是什么意思">动物疫苗的概念和分类是什么 动物疫苗的概念和分类是什么意思</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-10-free-node-subscribe.htm" title="VPN订阅 | 4月10日22.2M/S|免费Clash/Shadowrocket/SSR/V2ray订阅节点分享">VPN订阅 | 4月10日22.2M/S|免费Clash/Shadowrocket/SSR/V2ray订阅节点分享</a></li>
                        <li class="py-2"><a href="/news/article-78364.htm" title="中国的四大佛教名山是哪四大名山(中国佛教四大名山一般指的是)">中国的四大佛教名山是哪四大名山(中国佛教四大名山一般指的是)</a></li>
                        <li class="py-2"><a href="/news/article-101490.htm" title="同城哪里可以领养猫狗（同城哪里可以领养猫狗的）">同城哪里可以领养猫狗（同城哪里可以领养猫狗的）</a></li>
                        <li class="py-2"><a href="/news/article-90970.htm" title="天津宠物救助站领养宠物流程表（天津市宠物救助站）">天津宠物救助站领养宠物流程表（天津市宠物救助站）</a></li>
                        <li class="py-2"><a href="/news/article-85343.htm" title="分享两个实用的shell脚本">分享两个实用的shell脚本</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-16-node-share-links.htm" title="VPN订阅 | 3月16日21.3M/S|免费SSR/V2ray/Clash/Shadowrocket订阅节点分享">VPN订阅 | 3月16日21.3M/S|免费SSR/V2ray/Clash/Shadowrocket订阅节点分享</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">68</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">54</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </section>
    </main>
        <!-- Footer 3 - Bootstrap Brain Component -->
    <footer class="footer">
        <div class="border-top py-4 py-md-5 py-xl-8">
            <div class="container overflow-hidden">
                <div class="row gy-4 gy-md-0">
                    <div class="col-xs-12 col-md-12 order-2 order-md-1">
                        <div class="footer-copyright-wrapper text-center">
                                                <p>
                                                <a href="/">首页</a> |
                                                <a href="/free-nodes/">免费节点</a> |
                                                <a href="/paid-subscribe/">推荐机场</a> |
                                                <a href="/news/">新闻资讯</a> |
                                                <a href="/client.htm">客户端</a> |
                                                <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                            VPN订阅 推荐VPN免费节点订阅官网 版权所有 Powered by WordPress
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </footer>
    <script src="/assets/website/js/frontend/windowsclashnode/jquery-3.5.1.min.js"></script>
    <script src="/assets/website/js/frontend/windowsclashnode/bootstrap/bootstrap.bundle.min.js"></script>
    <!-- Javascript Files: Controllers -->
    <script src="/assets/website/js/frontend/windowsclashnode/global.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>